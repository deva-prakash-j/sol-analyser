plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.sol'
version = '1.0.0'
description = 'Solana Wallet Analyzer'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'io.projectreactor.netty:reactor-netty-http'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.3.0'
    implementation 'io.github.resilience4j:resilience4j-micrometer:2.3.0'
    implementation 'io.github.resilience4j:resilience4j-reactor:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Jib configuration for containerization
jib {
    from {
        image = 'eclipse-temurin:21-jre-alpine'
        platforms {
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
        }
    }
    
    to {
        image = 'sol-wallet-analyzer'
        tags = ['latest', version]
    }
    
    container {
        mainClass = 'com.sol.SolApplication'
        ports = ['8090', '8091']
        
        // Production JVM configuration
        jvmFlags = [
            '-Xms1g',
            '-Xmx2g',
            '-XX:+UseG1GC',
            '-XX:MaxGCPauseMillis=200',
            '-XX:+UseStringDeduplication',
            '-XX:+OptimizeStringConcat',
            '-XX:+UseCompressedOops',
            '-XX:+UseCompressedClassPointers',
            '-server',
            '-Djava.awt.headless=true',
            '-Dspring.profiles.active=prod',
            '-Dfile.encoding=UTF-8'
        ]
        
        // Environment variables
        environment = [
            'TZ': 'UTC'
        ]
        
        // Container labels
        labels = [
            'maintainer': 'SOL Team',
            'version': version,
            'description': 'Solana Wallet Analyzer with Proxy Rotation'
        ]
    }
}

//tasks.named('test') {
//    useJUnitPlatform()
//}
