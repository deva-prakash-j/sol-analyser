spring:
  application:
    name: sol
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: dpraka15
    password: ${RMQ_PWD}
    virtual-host: app
    listener:
      simple:
        acknowledge-mode: auto
        prefetch: 1
        retry:
          enabled: true
          initial-interval: 3000
          max-attempts: 3
  web:
    resources:
      add-mappings: false
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 200000
  datasource:
    url: ${DB_URI}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 15000
      leak-detection-threshold: 60000
      validation-timeout: 5000
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: false
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true
        cache:
          use_second_level_cache: false
          use_query_cache: false

# Actuator Configuration
management:
  prometheus:
    metrics:
      export:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
    metrics:
      access: read-only
    prometheus:
      access: read-only
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
  health:
    redis:
      enabled: true
    db:
      enabled: true

app:
  cache:
    default-ttl-seconds: 86400

# Oculus Proxy Configuration (Dynamic Sessions)
oculus:
  auth-token: ${OCULUS_AUTH_TOKEN}
  order-token: oc_b825a01f
  country: us
  plan-type: SHARED_DC

proxy-pool:
  host: "p.webshare.io"
  port: 80
  usernamePrefix: ${PROXY_USERNAME}
  startIndex: 1
  count: 250
  password: ${PROXY_PASSWORD}
  # Increased to 3 connections per proxy (conservative for RPC stability)
  perProxyMaxConnections: 1
  # Keep generous timeouts for Solana RPC variability (10-30s response times are normal)
  connectTimeoutMs: 10000
  responseTimeoutMs: 30000
  readTimeoutSec: 30
  writeTimeoutSec: 30
  enableMetrics: true
  
  # Health tracking configuration
  health:
    # Mark proxy unhealthy after 5 consecutive failures
    failureThreshold: 5
    # Open circuit breaker after 10 consecutive failures
    circuitOpenThreshold: 10
    # Recovery window: try half-open state after 60s
    recoveryWindowMs: 60000
